package service;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import domain.Product;

public class ProductManager {

	private Connection connect;
	private final String URL = "jdbc:hsqldb:hsql://localhost/workdb";
	private final String CREATE_TABLE_PRODUCT = "CREATE TABLE product(id bigint GENERATED BY DEFAULT AS IDENTITY, productName varchar(20), price integer, category varchar(20))";
	private PreparedStatement addProductStmt;
	private PreparedStatement deleteProductStmt;
	private PreparedStatement deleteAllProductsStmt;
	private PreparedStatement getAllProductsStmt;

	private Statement statement;
	
	public ProductManager(){
		try {
			connect = DriverManager.getConnection(URL);
			statement = connect.createStatement();
	
			ResultSet rs = connect.getMetaData().getTables(null, null, null,
					null);
			boolean tableExists = false;
			while (rs.next()) {
				if ("product".equalsIgnoreCase(rs.getString("TABLE_NAME"))) {
					tableExists = true;
					break;
				}
			}
	
			if (!tableExists){
				statement.executeUpdate(CREATE_TABLE_PRODUCT);
			}
			
			addProductStmt = connect.prepareStatement("INSERT INTO product(productName,price,category) VALUES (?,?,?);");
			deleteProductStmt = connect.prepareStatement("DELETE FROM product WHERE productName = ?;");
			getAllProductsStmt = connect.prepareStatement("SELECT * FROM product;");
			deleteAllProductsStmt = connect.prepareStatement("TRUNCATE product;");
			
		} catch (SQLException ex){
			ex.printStackTrace();
		}
	}
	
	public void deleteAllProducts(){
		try {
			deleteAllProductsStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public void getAllProducts(){
		try {
			getAllProductsStmt.executeQuery();
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
	
	public int addProduct(Product product){
		int count = 0;
		try {
			addProductStmt.setString(1, product.getProductName());
			addProductStmt.setInt(2, product.getPrice());
			addProductStmt.setString(3, product.getCategory());
			count = addProductStmt.executeUpdate();
		} catch (SQLException e) {
			e.printStackTrace();
		}
		return count;
	}
	
	public void deleteProduct(Product product){
		try {
			deleteProductStmt.setString(1, product.getProductName());
		} catch (SQLException e) {
			e.printStackTrace();
		}
	}
}